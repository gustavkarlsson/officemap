plugins {
  id "com.moowork.node" version "0.10"
  id "com.moowork.grunt" version "0.10"
}

apply plugin: "base"
apply plugin: "com.moowork.node"
apply plugin: "com.moowork.grunt"

ext {
  nodeModulesDir = "${projectDir}/node_modules"
  bowerComponentsDir = "${projectDir}/bower_components"
  cachesDir = "${projectDir}/.caches"
  npmCacheDir = "${cachesDir}/npm"
  bowerCacheDir = "${cachesDir}/bower"
  appDir = "${projectDir}/app"
  serveDir = "${projectDir}/.tmp"
}

node {
  version = "0.12.5"
  npmVersion = "2.11.2"
  download = true
}

task configureNpmCache(type: NpmTask) {
  description = "Configure the NPM cache"
  outputs.files file(npmCacheDir)

  args = [ "config", "set", "cache", npmCacheDir ]
}

task installNodeModules(type: NpmTask, dependsOn: configureNpmCache) {
  description = "Install Node.js modules"
  inputs.files file("package.json")
  outputs.files file("node_modules")

  args = [ "install" ]
}

task installBowerComponents(type: NodeTask, dependsOn: installNodeModules) {
  description = "Install bower components"
  inputs.files file("bower.json")
  outputs.files file(bowerComponentsDir)

  script = file("${nodeModulesDir}/bower/bin/bower")
  args = ["--config.storage.cache=${bowerCacheDir}/cache",
          "--config.storage.packages=${bowerCacheDir}/packages",
          "--config.storage.registry=${bowerCacheDir}/registry",
          "install"]
}

grunt_build {
  dependsOn installNodeModules
  dependsOn installGrunt
  dependsOn installBowerComponents

  inputs.files file("Gruntfile.json")
  inputs.files file("package.json")
  inputs.files file("bower.json")
  inputs.files file(".jshintrc")
  inputs.files file(".jshintrc")
  inputs.files file(appDir)
  outputs.files file("dist")
}

grunt_serve {
  dependsOn installNodeModules
  dependsOn installGrunt
  dependsOn installBowerComponents
}

build.dependsOn grunt_build

task serve(dependsOn: grunt_serve) {
  description "Run the web application"
}

clean.delete << file("dist")
clean.delete << file(nodeModulesDir)
clean.delete << file(bowerComponentsDir)
clean.delete << file(cachesDir)
clean.delete << file(".sass-cache")
clean.delete << file(serveDir)
